{"ast":null,"code":"import { watch, nextTick, onMounted, getCurrentInstance } from 'vue';\nimport { vmHasRouter } from '../../utils/private/vm.js';\nexport const useModelToggleProps = {\n  modelValue: {\n    type: Boolean,\n    default: null\n  },\n  'onUpdate:modelValue': [Function, Array]\n};\nexport const useModelToggleEmits = ['before-show', 'show', 'before-hide', 'hide']; // handleShow/handleHide -> removeTick(), self (& emit show)\n\nexport default function ({\n  showing,\n  canShow,\n  // optional\n  hideOnRouteChange,\n  // optional\n  handleShow,\n  // optional\n  handleHide,\n  // optional\n  processOnMount // optional\n\n}) {\n  const vm = getCurrentInstance();\n  const {\n    props,\n    emit,\n    proxy\n  } = vm;\n  let payload;\n\n  function toggle(evt) {\n    if (showing.value === true) {\n      hide(evt);\n    } else {\n      show(evt);\n    }\n  }\n\n  function show(evt) {\n    if (props.disable === true || evt !== void 0 && evt.qAnchorHandled === true || canShow !== void 0 && canShow(evt) !== true) {\n      return;\n    }\n\n    const listener = props['onUpdate:modelValue'] !== void 0;\n\n    if (listener === true && __QUASAR_SSR_SERVER__ !== true) {\n      emit('update:modelValue', true);\n      payload = evt;\n      nextTick(() => {\n        if (payload === evt) {\n          payload = void 0;\n        }\n      });\n    }\n\n    if (props.modelValue === null || listener === false || __QUASAR_SSR_SERVER__) {\n      processShow(evt);\n    }\n  }\n\n  function processShow(evt) {\n    if (showing.value === true) {\n      return;\n    }\n\n    showing.value = true;\n    emit('before-show', evt);\n\n    if (handleShow !== void 0) {\n      handleShow(evt);\n    } else {\n      emit('show', evt);\n    }\n  }\n\n  function hide(evt) {\n    if (__QUASAR_SSR_SERVER__ || props.disable === true) {\n      return;\n    }\n\n    const listener = props['onUpdate:modelValue'] !== void 0;\n\n    if (listener === true && __QUASAR_SSR_SERVER__ !== true) {\n      emit('update:modelValue', false);\n      payload = evt;\n      nextTick(() => {\n        if (payload === evt) {\n          payload = void 0;\n        }\n      });\n    }\n\n    if (props.modelValue === null || listener === false || __QUASAR_SSR_SERVER__) {\n      processHide(evt);\n    }\n  }\n\n  function processHide(evt) {\n    if (showing.value === false) {\n      return;\n    }\n\n    showing.value = false;\n    emit('before-hide', evt);\n\n    if (handleHide !== void 0) {\n      handleHide(evt);\n    } else {\n      emit('hide', evt);\n    }\n  }\n\n  function processModelChange(val) {\n    if (props.disable === true && val === true) {\n      if (props['onUpdate:modelValue'] !== void 0) {\n        emit('update:modelValue', false);\n      }\n    } else if (val === true !== showing.value) {\n      const fn = val === true ? processShow : processHide;\n      fn(payload);\n    }\n  }\n\n  watch(() => props.modelValue, processModelChange);\n\n  if (hideOnRouteChange !== void 0 && vmHasRouter(vm) === true) {\n    watch(() => proxy.$route.fullPath, () => {\n      if (hideOnRouteChange.value === true && showing.value === true) {\n        hide();\n      }\n    });\n  }\n\n  processOnMount === true && onMounted(() => {\n    processModelChange(props.modelValue);\n  }); // expose public methods\n\n  const publicMethods = {\n    show,\n    hide,\n    toggle\n  };\n  Object.assign(proxy, publicMethods);\n  return publicMethods;\n}","map":{"version":3,"names":["watch","nextTick","onMounted","getCurrentInstance","vmHasRouter","useModelToggleProps","modelValue","type","Boolean","default","Function","Array","useModelToggleEmits","showing","canShow","hideOnRouteChange","handleShow","handleHide","processOnMount","vm","props","emit","proxy","payload","toggle","evt","value","hide","show","disable","qAnchorHandled","listener","__QUASAR_SSR_SERVER__","processShow","processHide","processModelChange","val","fn","$route","fullPath","publicMethods","Object","assign"],"sources":["/Users/hedermilani/Projetos/Projetos Vue/quasar/node_modules/quasar/src/composables/private/use-model-toggle.js"],"sourcesContent":["import { watch, nextTick, onMounted, getCurrentInstance } from 'vue'\n\nimport { vmHasRouter } from '../../utils/private/vm.js'\n\nexport const useModelToggleProps = {\n  modelValue: {\n    type: Boolean,\n    default: null\n  },\n\n  'onUpdate:modelValue': [ Function, Array ]\n}\n\nexport const useModelToggleEmits = [\n  'before-show', 'show', 'before-hide', 'hide'\n]\n\n// handleShow/handleHide -> removeTick(), self (& emit show)\n\nexport default function ({\n  showing,\n  canShow, // optional\n  hideOnRouteChange, // optional\n  handleShow, // optional\n  handleHide, // optional\n  processOnMount // optional\n}) {\n  const vm = getCurrentInstance()\n  const { props, emit, proxy } = vm\n\n  let payload\n\n  function toggle (evt) {\n    if (showing.value === true) {\n      hide(evt)\n    }\n    else {\n      show(evt)\n    }\n  }\n\n  function show (evt) {\n    if (\n      props.disable === true\n      || (evt !== void 0 && evt.qAnchorHandled === true)\n      || (canShow !== void 0 && canShow(evt) !== true)\n    ) {\n      return\n    }\n\n    const listener = props[ 'onUpdate:modelValue' ] !== void 0\n\n    if (listener === true && __QUASAR_SSR_SERVER__ !== true) {\n      emit('update:modelValue', true)\n      payload = evt\n      nextTick(() => {\n        if (payload === evt) {\n          payload = void 0\n        }\n      })\n    }\n\n    if (props.modelValue === null || listener === false || __QUASAR_SSR_SERVER__) {\n      processShow(evt)\n    }\n  }\n\n  function processShow (evt) {\n    if (showing.value === true) {\n      return\n    }\n\n    showing.value = true\n\n    emit('before-show', evt)\n\n    if (handleShow !== void 0) {\n      handleShow(evt)\n    }\n    else {\n      emit('show', evt)\n    }\n  }\n\n  function hide (evt) {\n    if (__QUASAR_SSR_SERVER__ || props.disable === true) {\n      return\n    }\n\n    const listener = props[ 'onUpdate:modelValue' ] !== void 0\n\n    if (listener === true && __QUASAR_SSR_SERVER__ !== true) {\n      emit('update:modelValue', false)\n      payload = evt\n      nextTick(() => {\n        if (payload === evt) {\n          payload = void 0\n        }\n      })\n    }\n\n    if (props.modelValue === null || listener === false || __QUASAR_SSR_SERVER__) {\n      processHide(evt)\n    }\n  }\n\n  function processHide (evt) {\n    if (showing.value === false) {\n      return\n    }\n\n    showing.value = false\n\n    emit('before-hide', evt)\n\n    if (handleHide !== void 0) {\n      handleHide(evt)\n    }\n    else {\n      emit('hide', evt)\n    }\n  }\n\n  function processModelChange (val) {\n    if (props.disable === true && val === true) {\n      if (props[ 'onUpdate:modelValue' ] !== void 0) {\n        emit('update:modelValue', false)\n      }\n    }\n    else if ((val === true) !== showing.value) {\n      const fn = val === true ? processShow : processHide\n      fn(payload)\n    }\n  }\n\n  watch(() => props.modelValue, processModelChange)\n\n  if (hideOnRouteChange !== void 0 && vmHasRouter(vm) === true) {\n    watch(() => proxy.$route.fullPath, () => {\n      if (hideOnRouteChange.value === true && showing.value === true) {\n        hide()\n      }\n    })\n  }\n\n  processOnMount === true && onMounted(() => {\n    processModelChange(props.modelValue)\n  })\n\n  // expose public methods\n  const publicMethods = { show, hide, toggle }\n  Object.assign(proxy, publicMethods)\n\n  return publicMethods\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}